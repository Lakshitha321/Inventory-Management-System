{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chamidu\\\\Documents\\\\Inventory Management\\\\frontend\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Handle input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    // Clear error/success messages when user starts typing\n    if (error) setError('');\n    if (success) setSuccess('');\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!formData.email || !formData.password) {\n      setError('Please fill in all fields');\n      return;\n    }\n    if (!isValidEmail(formData.email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess(data.message || 'Login successful!');\n        // Handle successful login (e.g., store token, redirect user)\n        console.log('Login successful:', data);\n\n        // Example: Store user data in localStorage (optional)\n        // localStorage.setItem('user', JSON.stringify(data));\n\n        // Example: Redirect to dashboard or home page\n        // window.location.href = '/dashboard';\n\n        // Clear form\n        setFormData({\n          email: '',\n          password: ''\n        });\n      } else {\n        setError(data.message || 'Login failed');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Network error. Please check your connection and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Email validation helper\n  const isValidEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            placeholder: \"Enter your email\",\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            placeholder: \"Enter your password\",\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `login-button ${loading ? 'loading' : ''}`,\n          disabled: loading,\n          children: loading ? 'Logging in...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"xufWXg9jRIbXfYrAEhYdk9fHO0c=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","loading","setLoading","error","setError","success","setSuccess","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","isValidEmail","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","console","log","emailRegex","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","required","href","_c","$RefreshReg$"],"sources":["C:/Users/Chamidu/Documents/Inventory Management/frontend/src/components/Login/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    // Clear error/success messages when user starts typing\r\n    if (error) setError('');\r\n    if (success) setSuccess('');\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Basic validation\r\n    if (!formData.email || !formData.password) {\r\n      setError('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    if (!isValidEmail(formData.email)) {\r\n      setError('Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:8080/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          email: formData.email,\r\n          password: formData.password\r\n        })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccess(data.message || 'Login successful!');\r\n        // Handle successful login (e.g., store token, redirect user)\r\n        console.log('Login successful:', data);\r\n        \r\n        // Example: Store user data in localStorage (optional)\r\n        // localStorage.setItem('user', JSON.stringify(data));\r\n        \r\n        // Example: Redirect to dashboard or home page\r\n        // window.location.href = '/dashboard';\r\n        \r\n        // Clear form\r\n        setFormData({ email: '', password: '' });\r\n      } else {\r\n        setError(data.message || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      setError('Network error. Please check your connection and try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Email validation helper\r\n  const isValidEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-form\">\r\n        <h2>Login</h2>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter your email\"\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              placeholder=\"Enter your password\"\r\n              disabled={loading}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className={`login-button ${loading ? 'loading' : ''}`}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"login-footer\">\r\n          <p>Don't have an account? <a href=\"/register\">Sign up</a></p>\r\n          <p><a href=\"/forgot-password\">Forgot password?</a></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}