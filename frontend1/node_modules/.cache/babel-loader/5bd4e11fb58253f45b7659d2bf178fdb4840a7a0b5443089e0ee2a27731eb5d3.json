{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chamidu\\\\Documents\\\\Inventory Management\\\\frontend\\\\src\\\\components\\\\UpdateItem\\\\UpdateItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./UpdateItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateItem() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [itemData, setItemData] = useState({\n    itemId: \"\",\n    itemName: \"\",\n    itemCategory: \"\",\n    itemQty: \"\",\n    itemDetails: \"\",\n    itemImage: \"\"\n  });\n  const [previewImage, setPreviewImage] = useState(null);\n  const [file, setFile] = useState(null);\n\n  // Fetch item data on component mount\n  useEffect(() => {\n    const fetchItemData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        console.log(`Fetching item data for ID: ${id}`);\n        const response = await axios.get(`http://localhost:8080/inventory/${id}`, {\n          timeout: 10000,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Item data received:', response.data);\n\n        // Ensure all fields are properly formatted\n        const formattedData = {\n          itemId: response.data.itemId || \"\",\n          itemName: response.data.itemName || \"\",\n          itemCategory: response.data.itemCategory || \"\",\n          itemQty: response.data.itemQty ? response.data.itemQty.toString() : \"0\",\n          itemDetails: response.data.itemDetails || \"\",\n          itemImage: response.data.itemImage || \"\"\n        };\n        setItemData(formattedData);\n\n        // Set preview image if it exists\n        if (response.data.itemImage) {\n          setPreviewImage(`http://localhost:8080/uploads/${response.data.itemImage}`);\n        }\n      } catch (err) {\n        console.error(\"Error fetching item data:\", err);\n        let errorMessage = \"Failed to load item data. \";\n        if (err.response) {\n          var _err$response$data;\n          errorMessage += `Server error: ${err.response.status} - ${((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.response.statusText}`;\n        } else if (err.request) {\n          errorMessage += \"No response from server. Please check if the server is running.\";\n        } else {\n          errorMessage += err.message;\n        }\n        setError(errorMessage);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (id) {\n      fetchItemData();\n    } else {\n      setError(\"No item ID provided\");\n      setIsLoading(false);\n    }\n  }, [id]);\n\n  // Handle input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setItemData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle image file selection\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile) {\n      // Validate file type\n      if (!selectedFile.type.startsWith('image/')) {\n        setError(\"Please select a valid image file\");\n        return;\n      }\n\n      // Validate file size (5MB limit)\n      if (selectedFile.size > 5 * 1024 * 1024) {\n        setError(\"Image file size must be less than 5MB\");\n        return;\n      }\n      setFile(selectedFile);\n\n      // Create a preview of the selected image\n      const reader = new FileReader();\n      reader.onload = e => {\n        setPreviewImage(e.target.result);\n      };\n      reader.readAsDataURL(selectedFile);\n    }\n  };\n\n  // Validate form data\n  const validateForm = () => {\n    if (!itemData.itemName.trim()) {\n      setError(\"Item name is required\");\n      return false;\n    }\n    if (!itemData.itemCategory.trim()) {\n      setError(\"Category is required\");\n      return false;\n    }\n    const qty = parseFloat(itemData.itemQty);\n    if (isNaN(qty) || qty < 0) {\n      setError(\"Quantity must be a valid positive number\");\n      return false;\n    }\n    return true;\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('Submitting update for item:', itemData);\n      let response;\n      if (file) {\n        // If we have a new file, use FormData\n        const formData = new FormData();\n        formData.append(\"itemId\", itemData.itemId.toString());\n        formData.append(\"itemName\", itemData.itemName.trim());\n        formData.append(\"itemCategory\", itemData.itemCategory.trim());\n        formData.append(\"itemQty\", itemData.itemQty.toString());\n        formData.append(\"itemDetails\", itemData.itemDetails.trim());\n        formData.append(\"itemImage\", file);\n        console.log('Sending FormData with new image file:', file.name);\n        response = await axios.put(`http://localhost:8080/inventory/${id}`, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          timeout: 30000\n        });\n      } else {\n        // If no new file, send JSON data - ensure proper data types\n        const updateData = {\n          itemId: itemData.itemId,\n          itemName: itemData.itemName.trim(),\n          itemCategory: itemData.itemCategory.trim(),\n          itemQty: parseInt(itemData.itemQty, 10),\n          // Ensure it's an integer\n          itemDetails: itemData.itemDetails.trim(),\n          itemImage: itemData.itemImage // Keep existing image\n        };\n\n        // Remove any undefined or null values\n        Object.keys(updateData).forEach(key => {\n          if (updateData[key] === undefined || updateData[key] === null) {\n            if (key === 'itemQty') {\n              updateData[key] = 0;\n            } else {\n              updateData[key] = '';\n            }\n          }\n        });\n        console.log('Sending JSON data (no new image):', updateData);\n        response = await axios.put(`http://localhost:8080/inventory/${id}`, updateData, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          timeout: 10000\n        });\n      }\n      console.log('Update successful:', response.data);\n\n      // Navigate back to inventory list on success\n      navigate(\"/allitems\", {\n        state: {\n          message: 'Item updated successfully!'\n        }\n      });\n    } catch (err) {\n      var _err$config;\n      console.error(\"Error updating item:\", err);\n      console.error(\"Request config:\", err.config);\n      console.error(\"Request data:\", (_err$config = err.config) === null || _err$config === void 0 ? void 0 : _err$config.data);\n      let errorMessage = \"Failed to update item. \";\n      if (err.response) {\n        const status = err.response.status;\n        const data = err.response.data;\n        console.error(\"Server response:\", {\n          status: status,\n          data: data,\n          headers: err.response.headers\n        });\n        switch (status) {\n          case 400:\n            errorMessage += `Bad Request - ${(data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || 'Invalid data format or missing required fields'}`;\n            break;\n          case 404:\n            errorMessage += `Item not found - The item with ID ${id} doesn't exist`;\n            break;\n          case 500:\n            errorMessage += `Server Error - ${(data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || 'Internal server error'}. Please check server logs.`;\n            break;\n          default:\n            errorMessage += `Server error: ${status} - ${(data === null || data === void 0 ? void 0 : data.message) || (data === null || data === void 0 ? void 0 : data.error) || err.response.statusText}`;\n        }\n      } else if (err.request) {\n        errorMessage += \"No response from server. Please check if the server is running on localhost:8080\";\n      } else {\n        errorMessage += err.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Navigate back to inventory list\n  const handleCancel = () => {\n    navigate(\"/allitems\");\n  };\n  if (isLoading && !itemData.itemId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading item data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-item-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Update Item \", id ? `(ID: ${id})` : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), \" \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError(null),\n        className: \"dismiss-btn\",\n        children: \"Dismiss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"update-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemId\",\n          children: \"Item ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"itemId\",\n          name: \"itemId\",\n          value: itemData.itemId,\n          onChange: handleInputChange,\n          required: true,\n          readOnly: true,\n          className: \"form-control readonly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemName\",\n          children: \"Item Name: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"itemName\",\n          name: \"itemName\",\n          value: itemData.itemName,\n          onChange: handleInputChange,\n          required: true,\n          className: \"form-control\",\n          placeholder: \"Enter item name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemCategory\",\n          children: \"Category: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"itemCategory\",\n          name: \"itemCategory\",\n          value: itemData.itemCategory,\n          onChange: handleInputChange,\n          required: true,\n          className: \"form-control\",\n          placeholder: \"Enter category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemQty\",\n          children: \"Quantity: *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"itemQty\",\n          name: \"itemQty\",\n          value: itemData.itemQty,\n          onChange: handleInputChange,\n          required: true,\n          min: \"0\",\n          step: \"1\",\n          className: \"form-control\",\n          placeholder: \"Enter quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemDetails\",\n          children: \"Details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"itemDetails\",\n          name: \"itemDetails\",\n          value: itemData.itemDetails,\n          onChange: handleInputChange,\n          rows: \"4\",\n          className: \"form-control\",\n          placeholder: \"Enter item details (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"itemImage\",\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"itemImage\",\n          name: \"itemImage\",\n          onChange: handleFileChange,\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"form-text\",\n          children: \"Supported formats: JPG, PNG, GIF. Max size: 5MB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewImage,\n            alt: \"Item preview\",\n            className: \"preview-img\",\n            onError: e => {\n              console.error('Image load error:', e);\n              e.target.onerror = null;\n              e.target.src = 'https://via.placeholder.com/150?text=No+Image';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"image-caption\",\n            children: file ? 'New image selected' : 'Current image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancel,\n          className: \"btn cancel-btn\",\n          disabled: isLoading,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn update-btn\",\n          disabled: isLoading,\n          children: isLoading ? \"Updating...\" : \"Update Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        marginTop: '20px',\n        padding: '10px',\n        backgroundColor: '#f5f5f5',\n        fontSize: '12px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Debug Info:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Item ID from URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 14\n        }, this), \" \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Item Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 14\n        }, this), \" \", JSON.stringify(itemData, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Has New File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 14\n        }, this), \" \", file ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Parsed Quantity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 14\n        }, this), \" \", parseInt(itemData.itemQty, 10)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateItem, \"WaHZJQAvLWJKKyrjuQAb2fpjPGM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateItem;\nexport default UpdateItem;\nvar _c;\n$RefreshReg$(_c, \"UpdateItem\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","UpdateItem","_s","id","navigate","isLoading","setIsLoading","error","setError","itemData","setItemData","itemId","itemName","itemCategory","itemQty","itemDetails","itemImage","previewImage","setPreviewImage","file","setFile","fetchItemData","console","log","response","get","timeout","headers","data","formattedData","toString","err","errorMessage","_err$response$data","status","message","statusText","request","handleInputChange","e","name","value","target","prevData","handleFileChange","selectedFile","files","type","startsWith","size","reader","FileReader","onload","result","readAsDataURL","validateForm","trim","qty","parseFloat","isNaN","handleSubmit","preventDefault","formData","FormData","append","put","updateData","parseInt","Object","keys","forEach","key","undefined","state","_err$config","config","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","onChange","required","readOnly","placeholder","min","step","rows","accept","src","alt","onError","onerror","disabled","process","env","NODE_ENV","style","marginTop","padding","backgroundColor","fontSize","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Chamidu/Documents/Inventory Management/frontend/src/components/UpdateItem/UpdateItem.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./UpdateItem.css\";\r\n\r\nfunction UpdateItem() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [itemData, setItemData] = useState({\r\n    itemId: \"\",\r\n    itemName: \"\",\r\n    itemCategory: \"\", \r\n    itemQty: \"\",\r\n    itemDetails: \"\",\r\n    itemImage: \"\"\r\n  });\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n\r\n  // Fetch item data on component mount\r\n  useEffect(() => {\r\n    const fetchItemData = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        console.log(`Fetching item data for ID: ${id}`);\r\n        const response = await axios.get(`http://localhost:8080/inventory/${id}`, {\r\n          timeout: 10000,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n        \r\n        console.log('Item data received:', response.data);\r\n        \r\n        // Ensure all fields are properly formatted\r\n        const formattedData = {\r\n          itemId: response.data.itemId || \"\",\r\n          itemName: response.data.itemName || \"\",\r\n          itemCategory: response.data.itemCategory || \"\",\r\n          itemQty: response.data.itemQty ? response.data.itemQty.toString() : \"0\",\r\n          itemDetails: response.data.itemDetails || \"\",\r\n          itemImage: response.data.itemImage || \"\"\r\n        };\r\n        \r\n        setItemData(formattedData);\r\n        \r\n        // Set preview image if it exists\r\n        if (response.data.itemImage) {\r\n          setPreviewImage(`http://localhost:8080/uploads/${response.data.itemImage}`);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching item data:\", err);\r\n        \r\n        let errorMessage = \"Failed to load item data. \";\r\n        if (err.response) {\r\n          errorMessage += `Server error: ${err.response.status} - ${err.response.data?.message || err.response.statusText}`;\r\n        } else if (err.request) {\r\n          errorMessage += \"No response from server. Please check if the server is running.\";\r\n        } else {\r\n          errorMessage += err.message;\r\n        }\r\n        \r\n        setError(errorMessage);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchItemData();\r\n    } else {\r\n      setError(\"No item ID provided\");\r\n      setIsLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setItemData(prevData => ({\r\n      ...prevData,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Handle image file selection\r\n  const handleFileChange = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    if (selectedFile) {\r\n      // Validate file type\r\n      if (!selectedFile.type.startsWith('image/')) {\r\n        setError(\"Please select a valid image file\");\r\n        return;\r\n      }\r\n      \r\n      // Validate file size (5MB limit)\r\n      if (selectedFile.size > 5 * 1024 * 1024) {\r\n        setError(\"Image file size must be less than 5MB\");\r\n        return;\r\n      }\r\n      \r\n      setFile(selectedFile);\r\n      \r\n      // Create a preview of the selected image\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        setPreviewImage(e.target.result);\r\n      };\r\n      reader.readAsDataURL(selectedFile);\r\n    }\r\n  };\r\n\r\n  // Validate form data\r\n  const validateForm = () => {\r\n    if (!itemData.itemName.trim()) {\r\n      setError(\"Item name is required\");\r\n      return false;\r\n    }\r\n    if (!itemData.itemCategory.trim()) {\r\n      setError(\"Category is required\");\r\n      return false;\r\n    }\r\n    const qty = parseFloat(itemData.itemQty);\r\n    if (isNaN(qty) || qty < 0) {\r\n      setError(\"Quantity must be a valid positive number\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      console.log('Submitting update for item:', itemData);\r\n      \r\n      let response;\r\n      \r\n      if (file) {\r\n        // If we have a new file, use FormData\r\n        const formData = new FormData();\r\n        formData.append(\"itemId\", itemData.itemId.toString());\r\n        formData.append(\"itemName\", itemData.itemName.trim());\r\n        formData.append(\"itemCategory\", itemData.itemCategory.trim());\r\n        formData.append(\"itemQty\", itemData.itemQty.toString());\r\n        formData.append(\"itemDetails\", itemData.itemDetails.trim());\r\n        formData.append(\"itemImage\", file);\r\n\r\n        console.log('Sending FormData with new image file:', file.name);\r\n        \r\n        response = await axios.put(`http://localhost:8080/inventory/${id}`, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          },\r\n          timeout: 30000\r\n        });\r\n      } else {\r\n        // If no new file, send JSON data - ensure proper data types\r\n        const updateData = {\r\n          itemId: itemData.itemId,\r\n          itemName: itemData.itemName.trim(),\r\n          itemCategory: itemData.itemCategory.trim(),\r\n          itemQty: parseInt(itemData.itemQty, 10), // Ensure it's an integer\r\n          itemDetails: itemData.itemDetails.trim(),\r\n          itemImage: itemData.itemImage // Keep existing image\r\n        };\r\n\r\n        // Remove any undefined or null values\r\n        Object.keys(updateData).forEach(key => {\r\n          if (updateData[key] === undefined || updateData[key] === null) {\r\n            if (key === 'itemQty') {\r\n              updateData[key] = 0;\r\n            } else {\r\n              updateData[key] = '';\r\n            }\r\n          }\r\n        });\r\n\r\n        console.log('Sending JSON data (no new image):', updateData);\r\n        \r\n        response = await axios.put(`http://localhost:8080/inventory/${id}`, updateData, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          timeout: 10000\r\n        });\r\n      }\r\n\r\n      console.log('Update successful:', response.data);\r\n      \r\n      // Navigate back to inventory list on success\r\n      navigate(\"/allitems\", { \r\n        state: { message: 'Item updated successfully!' }\r\n      });\r\n      \r\n    } catch (err) {\r\n      console.error(\"Error updating item:\", err);\r\n      console.error(\"Request config:\", err.config);\r\n      console.error(\"Request data:\", err.config?.data);\r\n      \r\n      let errorMessage = \"Failed to update item. \";\r\n      if (err.response) {\r\n        const status = err.response.status;\r\n        const data = err.response.data;\r\n        \r\n        console.error(\"Server response:\", {\r\n          status: status,\r\n          data: data,\r\n          headers: err.response.headers\r\n        });\r\n        \r\n        switch (status) {\r\n          case 400:\r\n            errorMessage += `Bad Request - ${data?.message || data?.error || 'Invalid data format or missing required fields'}`;\r\n            break;\r\n          case 404:\r\n            errorMessage += `Item not found - The item with ID ${id} doesn't exist`;\r\n            break;\r\n          case 500:\r\n            errorMessage += `Server Error - ${data?.message || data?.error || 'Internal server error'}. Please check server logs.`;\r\n            break;\r\n          default:\r\n            errorMessage += `Server error: ${status} - ${data?.message || data?.error || err.response.statusText}`;\r\n        }\r\n      } else if (err.request) {\r\n        errorMessage += \"No response from server. Please check if the server is running on localhost:8080\";\r\n      } else {\r\n        errorMessage += err.message;\r\n      }\r\n      \r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Navigate back to inventory list\r\n  const handleCancel = () => {\r\n    navigate(\"/allitems\");\r\n  };\r\n\r\n  if (isLoading && !itemData.itemId) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading item data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"update-item-container\">\r\n      <h1>Update Item {id ? `(ID: ${id})` : ''}</h1>\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <strong>Error:</strong> {error}\r\n          <button onClick={() => setError(null)} className=\"dismiss-btn\">\r\n            Dismiss\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"update-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"itemId\">Item ID:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"itemId\"\r\n            name=\"itemId\"\r\n            value={itemData.itemId}\r\n            onChange={handleInputChange}\r\n            required\r\n            readOnly\r\n            className=\"form-control readonly\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"itemName\">Item Name: *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"itemName\"\r\n            name=\"itemName\"\r\n            value={itemData.itemName}\r\n            onChange={handleInputChange}\r\n            required\r\n            className=\"form-control\"\r\n            placeholder=\"Enter item name\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"itemCategory\">Category: *</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"itemCategory\"\r\n            name=\"itemCategory\"\r\n            value={itemData.itemCategory}\r\n            onChange={handleInputChange}\r\n            required\r\n            className=\"form-control\"\r\n            placeholder=\"Enter category\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"itemQty\">Quantity: *</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"itemQty\"\r\n            name=\"itemQty\"\r\n            value={itemData.itemQty}\r\n            onChange={handleInputChange}\r\n            required\r\n            min=\"0\"\r\n            step=\"1\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter quantity\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"itemDetails\">Details:</label>\r\n          <textarea\r\n            id=\"itemDetails\"\r\n            name=\"itemDetails\"\r\n            value={itemData.itemDetails}\r\n            onChange={handleInputChange}\r\n            rows=\"4\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter item details (optional)\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"itemImage\">Image:</label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"itemImage\"\r\n            name=\"itemImage\"\r\n            onChange={handleFileChange}\r\n            accept=\"image/*\"\r\n            className=\"form-control\"\r\n          />\r\n          <small className=\"form-text\">\r\n            Supported formats: JPG, PNG, GIF. Max size: 5MB\r\n          </small>\r\n          {previewImage && (\r\n            <div className=\"image-preview\">\r\n              <img\r\n                src={previewImage}\r\n                alt=\"Item preview\"\r\n                className=\"preview-img\"\r\n                onError={(e) => {\r\n                  console.error('Image load error:', e);\r\n                  e.target.onerror = null;\r\n                  e.target.src = 'https://via.placeholder.com/150?text=No+Image';\r\n                }}\r\n              />\r\n              <p className=\"image-caption\">\r\n                {file ? 'New image selected' : 'Current image'}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-actions\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleCancel}\r\n            className=\"btn cancel-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn update-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? \"Updating...\" : \"Update Item\"}\r\n          </button>\r\n          </div>\r\n      </form>\r\n      \r\n      {/* Debug info - remove in production */}\r\n      {process.env.NODE_ENV === 'development' && (\r\n        <div className=\"debug-info\" style={{marginTop: '20px', padding: '10px', backgroundColor: '#f5f5f5', fontSize: '12px'}}>\r\n          <h4>Debug Info:</h4>\r\n          <p><strong>Item ID from URL:</strong> {id}</p>\r\n          <p><strong>Current Item Data:</strong> {JSON.stringify(itemData, null, 2)}</p>\r\n          <p><strong>Has New File:</strong> {file ? 'Yes' : 'No'}</p>\r\n          <p><strong>Parsed Quantity:</strong> {parseInt(itemData.itemQty, 10)}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}